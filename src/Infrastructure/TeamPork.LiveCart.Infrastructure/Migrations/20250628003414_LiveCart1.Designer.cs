// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamPork.LiveCart.Infrastructure.Data.Context.SQLContext;

#nullable disable

namespace TeamPork.LiveCart.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250628003414_LiveCart1")]
    partial class LiveCart1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.CustomerEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusinessSeqId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxRegNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserSeqId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessSeqId");

                    b.HasIndex("UserSeqId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.InvoiceEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusinessSeqId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DueAt")
                        .HasColumnType("date");

                    b.Property<DateOnly>("OrderedAt")
                        .HasColumnType("date");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserSeqId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessSeqId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("UserSeqId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.InvoiceItemEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusinessSeqId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<string>("InvoiceClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<string>("ItemClientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserSeqId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessSeqId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.HasIndex("UserSeqId");

                    b.ToTable("InvoiceItems");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.ItemEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusinessSeqId")
                        .HasColumnType("bigint");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UserSeqId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessSeqId");

                    b.HasIndex("UserSeqId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.Auth.UserRefreshTokenEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Expirey")
                        .HasColumnType("datetime2");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserSeqId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserSeqId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BusinessProfileSeqId")
                        .HasColumnType("bigint");

                    b.Property<long>("OwnerSeqId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessProfileSeqId");

                    b.HasIndex("OwnerSeqId")
                        .IsUnique();

                    b.ToTable("Businesses");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessProfileEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusinessProfiles");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("BusinessSeqId")
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int?>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DeletedDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("ModifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UserProfileSeqId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessSeqId");

                    b.HasIndex("UserProfileSeqId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.UserProfileEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.CustomerEntity", b =>
                {
                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessEntity", "Business")
                        .WithMany("Customers")
                        .HasForeignKey("BusinessSeqId");

                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.UserEntity", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserSeqId");

                    b.Navigation("Business");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.InvoiceEntity", b =>
                {
                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessEntity", "Business")
                        .WithMany("Invoices")
                        .HasForeignKey("BusinessSeqId");

                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.CustomerEntity", "Customer")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.UserEntity", "User")
                        .WithMany("Invoices")
                        .HasForeignKey("UserSeqId");

                    b.Navigation("Business");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.InvoiceItemEntity", b =>
                {
                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessEntity", "Business")
                        .WithMany()
                        .HasForeignKey("BusinessSeqId");

                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.InvoiceEntity", "Invoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.ItemEntity", "Item")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserSeqId");

                    b.Navigation("Business");

                    b.Navigation("Invoice");

                    b.Navigation("Item");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.ItemEntity", b =>
                {
                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessEntity", "Business")
                        .WithMany("Items")
                        .HasForeignKey("BusinessSeqId");

                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.UserEntity", "User")
                        .WithMany("Items")
                        .HasForeignKey("UserSeqId");

                    b.Navigation("Business");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.Auth.UserRefreshTokenEntity", b =>
                {
                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserSeqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessEntity", b =>
                {
                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessProfileEntity", "BusinessProfile")
                        .WithMany()
                        .HasForeignKey("BusinessProfileSeqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.UserEntity", "Owner")
                        .WithOne("OwnedBusiness")
                        .HasForeignKey("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessEntity", "OwnerSeqId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessProfile");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.UserEntity", b =>
                {
                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessEntity", "Business")
                        .WithMany("Members")
                        .HasForeignKey("BusinessSeqId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TeamPork.LiveCart.Infrastructure.Data.Entities.UserProfileEntity", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileSeqId");

                    b.Navigation("Business");

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.CustomerEntity", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.InvoiceEntity", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.App.ItemEntity", b =>
                {
                    b.Navigation("InvoiceItems");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.BusinessEntity", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Invoices");

                    b.Navigation("Items");

                    b.Navigation("Members");
                });

            modelBuilder.Entity("TeamPork.LiveCart.Infrastructure.Data.Entities.LiveCart.UserEntity", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Invoices");

                    b.Navigation("Items");

                    b.Navigation("OwnedBusiness");
                });
#pragma warning restore 612, 618
        }
    }
}
